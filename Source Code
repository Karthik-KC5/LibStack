class Book:
    def __init__(self, title, author, department, isbn, publication_year):
        self.title = title
        self.author = author
        self.department = department
        self.isbn = isbn
        self.publication_year = publication_year
        self.available = True
    
    def __str__(self):
        return f"Title: {self.title}, Author: {self.author}, Department: {self.department}, ISBN: {self.isbn}, Year: {self.publication_year}, Available: {'Yes' if self.available else 'No'}"

class Library:
    def __init__(self):
        self.books = []
        self.initialize_library()
    
    def initialize_library(self):
        # Sample books for 7 BTech departments (5 books each)
        departments = {
            "CSE": "Computer Science",
            "ECE": "Electronics and Communication",
            "ME": "Mechanical Engineering",
            "CE": "Civil Engineering",
            "EE": "Electrical Engineering",
            "CHE": "Chemical Engineering",
            "BT": "Biotechnology"
        }
        
        # Adding 5 books for each department
        for dept_code, dept_name in departments.items():
            for i in range(1, 6):
                self.books.append(Book(
                    title=f"{dept_name} Book {i}",
                    author=f"Author {i}",
                    department=dept_name,
                    isbn=f"ISBN-{dept_code}-{1000+i}",
                    publication_year=2015 + i
                ))
    
    def display_books(self, books=None):
        if books is None:
            books = self.books
        for i, book in enumerate(books, 1):
            print(f"{i}. {book}")
    
    def sort_books(self):
        print("\nSorting Options:")
        print("1. By Title")
        print("2. By Author")
        print("3. By Department")
        print("4. By Publication Year (Newest First)")
        print("5. By Publication Year (Oldest First)")
        print("6. By Availability")
        
        choice = input("Enter your sorting choice (1-6): ")
        
        if choice == '1':
            sorted_books = sorted(self.books, key=lambda x: x.title)
        elif choice == '2':
            sorted_books = sorted(self.books, key=lambda x: x.author)
        elif choice == '3':
            sorted_books = sorted(self.books, key=lambda x: x.department)
        elif choice == '4':
            sorted_books = sorted(self.books, key=lambda x: x.publication_year, reverse=True)
        elif choice == '5':
            sorted_books = sorted(self.books, key=lambda x: x.publication_year)
        elif choice == '6':
            sorted_books = sorted(self.books, key=lambda x: not x.available)
        else:
            print("Invalid choice. Displaying unsorted list.")
            sorted_books = self.books
        
        print("\nSorted Book List:")
        self.display_books(sorted_books)
    
    def search_books(self, keyword):
        results = []
        keyword = keyword.lower()
        for book in self.books:
            if (keyword in book.title.lower() or 
                keyword in book.author.lower() or 
                keyword in book.department.lower() or 
                keyword in book.isbn.lower()):
                results.append(book)
        return results
    
    def checkout_book(self, isbn):
        for book in self.books:
            if book.isbn == isbn and book.available:
                book.available = False
                print(f"Book '{book.title}' checked out successfully.")
                return
        print("Book not found or already checked out.")
    
    def return_book(self, isbn):
        for book in self.books:
            if book.isbn == isbn and not book.available:
                book.available = True
                print(f"Book '{book.title}' returned successfully.")
                return
        print("Book not found or already available.")

def main():
    library = Library()
    
    while True:
        print("\nLibrary Management System")
        print("1. Display All Books")
        print("2. Sort Books")
        print("3. Search Books")
        print("4. Checkout a Book")
        print("5. Return a Book")
        print("6. Exit")
        
        choice = input("Enter your choice (1-6): ")
        
        if choice == '1':
            print("\nAll Books in Library:")
            library.display_books()
        elif choice == '2':
            library.sort_books()
        elif choice == '3':
            keyword = input("Enter search keyword: ")
            results = library.search_books(keyword)
            if results:
                print("\nSearch Results:")
                library.display_books(results)
            else:
                print("No books found matching your search.")
        elif choice == '4':
            isbn = input("Enter ISBN of the book to checkout: ")
            library.checkout_book(isbn)
        elif choice == '5':
            isbn = input("Enter ISBN of the book to return: ")
            library.return_book(isbn)
        elif choice == '6':
            print("Thank you for using the Library Management System.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
